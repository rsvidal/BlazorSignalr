@page "/"

@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager

<PageTitle>Chat</PageTitle>

<h4>Demo chat using Blazor + SignalR </h4>
<h5>Rafael San Vidal </h5>

<div class="row">
    <div class="col-12">
       <label>Texto</label>
       <input type="text" @bind="text" />
       <button @onclick="Send">Enviar</button>
    </div>
</div>

<div class="row">
    <div class="col-12">
        @foreach(var t in texts)
        {
            <p>@t</p>
        }
    </div>
</div>

@code {
    private HubConnection hubConnection;
    private string text;
    List<string> texts = new List<String>();

    protected override async Task OnInitializedAsync()
    {
        hubConnection = new HubConnectionBuilder().WithUrl(NavigationManager.ToAbsoluteUri("/testhub")).Build();

        hubConnection.On<string>("ReceivedInformation", (receivedText) =>
        {
            Console.WriteLine("Received information is ... " + receivedText);
            texts.Add(receivedText);
            text = ""; // Initialize text
            StateHasChanged(); // Notify the change
        });

        // Start connection
        Console.WriteLine("Starting connection ...");
        await hubConnection.StartAsync();
    }

    // Al pulsar sobre el botón Enviar, se invoca a esta función Send(), que a su vez llava la función TestHub.Send() del lado servidor
    async Task Send() => await hubConnection.SendAsync("Send", text);

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();    
    }
}